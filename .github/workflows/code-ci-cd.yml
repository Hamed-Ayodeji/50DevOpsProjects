name: code tester and deployer

on:
  push:
    branches:
      - main
    paths:
      - 'beginnerLevel/2_basicCICDPipelineWithGitHubActions/app/**'
      - 'beginnerLevel/2_basicCICDPipelineWithGitHubActions/test/**'
      - 'beginnerLevel/2_basicCICDPipelineWithGitHubActions/requirements.txt'

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      REQUIREMENTS_FILE: beginnerLevel/2_basicCICDPipelineWithGitHubActions/requirements.txt
      PYTHONPATH: beginnerLevel/2_basicCICDPipelineWithGitHubActions

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          pip install -r ${{ env.REQUIREMENTS_FILE }}

      - name: Run tests
        run: |
          export PYTHONPATH=$(pwd)/beginnerLevel/2_basicCICDPipelineWithGitHubActions
          python -m unittest discover -s beginnerLevel/2_basicCICDPipelineWithGitHubActions/test -p "test_*.py"

  deploy:
    needs: test
    runs-on: ubuntu-latest

    env:
      DROPLET_NAME: code-ci-cd-droplet
      REGION: nyc1
      IMAGE: ubuntu-24-10-x64
      SIZE: s-1vcpu-1gb
      GIT_REPO: https://github.com/Hamed-Ayodeji/50DevOpsProjects.git
      LOCAL_PATH: /root/50DevOpsProjects
      APP_PATH: /root/50DevOpsProjects/beginnerLevel/2_basicCICDPipelineWithGitHubActions/app

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DIGITALOCEAN_PRIVATE_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 400 ~/.ssh/id_ed25519

      - name: Create a new droplet and deploy the app
        run: |
          doctl compute droplet create ${{ env.DROPLET_NAME }} --image ${{ env.IMAGE }} --region ${{ env.REGION }} --size ${{ env.SIZE }} --ssh-keys ${{ secrets.DIGITALOCEAN_SSH_KEY_ID }} --wait
          doctl compute ssh ${{ env.DROPLET_NAME }} --ssh-command "git clone ${{ env.GIT_REPO }} ${{ env.LOCAL_PATH }} && cd ${{ env.APP_PATH }} && pip install -r requirements.txt"